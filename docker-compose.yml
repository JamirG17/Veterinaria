version: '3.8'

# We define a dedicated network for our application for more stable communication.
networks:
  veterinaria-net:
    driver: bridge

services:
  # The database service, now connected to our dedicated network.
  # The service name is now 'db'.
  db:
    platform: linux/amd64 
    image: mysql:8.0
    container_name: veterinaria_db_container
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - veterinaria-net
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} 
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # The backend service, now connecting to 'db' over the dedicated network.
  backend:
    image: jamirg17/veterinaria-backend:latest
    container_name: veterinaria_backend_container
    restart: always
    networks:
      - veterinaria-net
    environment:
      # The URL is updated to connect to 'db' and includes compatibility parameters.
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

  # The frontend service, also connected to the dedicated network.
  frontend:
    image: jamirg17/veterinaria-frontend:latest
    container_name: veterinaria_frontend_container
    restart: always
    networks:
      - veterinaria-net
    ports:
      - "80:80" 
    depends_on:
      - backend
      
volumes:
  db_data:

